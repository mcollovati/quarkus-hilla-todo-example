name: PR Validation
on:
  push:
    branches: [main]
  workflow_dispatch:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]
concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
env:
  JAVA_VERSION: 17
jobs:
  check-permissions:
    name: Check User Permissions
    runs-on: ubuntu-latest
    steps:
      - run: echo "Concurrency Group = ${{ github.head_ref || github.ref_name }}"
      - uses: actions-cool/check-user-permission@main
        id: checkUser
        with:
          username: ${{github.triggering_actor}}
          require: 'write'
      - name: Fail on workflow triggered by external contributor
        if: ${{ steps.checkUser.outputs.require-result != 'true' && github.actor != 'dependabot[bot]' && github.actor != 'quarkus-hilla-bot[bot]' }}
        run: |
          echo "ðŸš« **${{ github.actor }}** is an external contributor, a **${{ github.repository }}** team member has to review this changes and re-run this build" \
            | tee -a $GITHUB_STEP_SUMMARY && exit 1
  changes:
    name: Compute changes
    needs: [check-permissions]
    runs-on: ubuntu-latest
    outputs:
      validation-required: ${{ steps.filter.outputs.validate }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            validate:
              - '!(README.md|LICENSE|.gitignore|etc/**)'
  build-and-test:
    name: Build and test
    needs: [changes]
    if: ${{ needs.changes.outputs.validation-required == 'true' }}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - uses: browser-actions/setup-chrome@latest
        id: setup-chrome
        if: ${{ !vars.QH_DISABLE_CHROME_INSTALL }}
        with:
          chrome-version: stable
      - name: Build
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp -DskipTests install
      - name: End-to-end Test (Development mode)
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp verify -DtrimStackTrace=false -Dselenide.browserBinary=${{ steps.setup-chrome.outputs.chrome-path }}
      - name: End-to-end Test (Production mode)
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp verify -DtrimStackTrace=false -Dselenide.browserBinary=${{ steps.setup-chrome.outputs.chrome-path }} -Pproduction
